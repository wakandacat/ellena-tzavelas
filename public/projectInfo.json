{
    "Projects": [
        {"Title": "Hangman",
            "Desc": "As a way to teach myself React.js, I created a simple game of hangman. Initially created a few years ago as a semi-functional and poorly structured program, it has since been remade with React best practices I picked up at my university co-op placement. The goal is to provide the player with a random Wikipedia article title to guess from the Wikipedia API. The style of the game is heavily influenced by the UI of the video game Persona 5, which also makes use of tarot cards like the Hanged Man.",
            "Image": [{"img": "hangman1.png", "alt": "All English letters (Aa-Zz) are hidden from the player. Any irregular letters, numbers, or punctuation characters are shown."},{"img": "hangman2.png", "alt": "Players can choose to play on 3 difficulty modes. Easy is the default and allows 10 incorrect guesses before a game over, Hard allows 5 and None allows infinite."},{"img": "hangman3.png", "alt": "Once the title has been successfully guessed, a game over is triggered, or the Give Up button is clicked, the title will allow users to click on it to take them to the corresponding Wikipedia article."}],
            "Year": "2024",
            "Res": "https://wakandacat.github.io/HangmanGameUpdated/"},
        {"Title": "Persona 3 Background",
            "Desc": "A computer background created using Vue.js and deployed to Wallpaper Engine. Initially created using vanilla JavaScript a few years ago, I decided to recreate it with Vue to significantly cut down on the length and improve the cleanliness of the code. The goal of this project was to imitate the UI from the video game Persona 3 Portable, one of my personal favourites. This background displays the current date, the time of day, the phase of the moon and indicates how many days are left until a full moon, all of which is good to keep track of for both myself and the game characters. The background images are pulled directly from the game files.",
            "Image": [{"img": "p3back.jpg", "alt": "As the game characters attend high school, After School is one of the times of day listed in the UI. Others include Morning, Lunch, Evening and Late Night."},{"img": "p3back2.jpg", "alt": "More memorable phases of the moon, such as Quarter, Half and Full moons are spelled out directly."},{"img": "p3back4.jpg", "alt": "Notable times of day and background images are different during weekends."},{"img": "p3back3.jpg", "alt": "Following with the game, the 'hidden hour' after midnight changes the UI to green. As an extra hour per day does not exist in real life, real-time 12am to 1am take its place."}],
            "Year": "2024",
            "Res": "https://wakandacat.github.io/P3BackgroundVUE/"},
        {"Title": "Mobile Event Scheduler",
            "Desc": "This Proof-of-Concept mobile application was created as an individual assignment for my 4th year Mobile App Development course. The goal was to create an event scheduler that allows users to view, add, update, delete events, and notify users of upcoming events. Multiple early designs that fit the specifications along with standard mobile app design theories were drawn out on paper, and the best few created as wireframes using Balsamiq. The final design, chosen for its simpler design and for its task completion time in with a predictive modeling software, was then created using Android Studio with Java. As a proof of concept, the app is not fully functional, but it does demonstrate the intended design and functionality, including multiple pages with Android Fragments, and data storage with ViewModels.",
            "Image": [{"img": "mobile2.png", "alt": "Wireframes created in Balsamiq of one of the better designs for the application."},{"img": "mobile3.png", "alt": "One of the pages of the wireframe design put into a predictive modelling program to estimate task times."},{"img": "mobileEventScheduler.mp4", "alt": "A video of adding a new event with the proof-of-concept application running from Android Studio on a virtual device."}],
            "Year": "2024",
            "Res": ""},
        {"Title": "Portfolio",
            "Desc": "I started to create this portfolio website in my 3rd year of university to showcase some of the cool academic and personal projects I've been working on. I created it using component-driven React.js as it was a framework I started to learn at a co-op placement and I wanted to continue to improve my skills with it. I will be continuing to update this portfolio as I create more projects and learn new skills!",
            "Image": [{"img": "port1.jpg", "alt": "This portfolio showcases a bit about me! A continuous work in progress, I plan to keep adding to it!"},{"img": "port2.mp4", "alt": "I created a custom theme component to allow for a dark mode and light mode. This is one of the tasks I took on during my co-op placement to improve their React application."}],
            "Year": "2025",
            "Res": "https://wakandacat.github.io/ellena-tzavelas/"},
        {"Title": "Flower Flux",
            "Desc": "Help Gatsbee the bee pollinate the flowers in his garden! Me and 3 peers created this 2D side-scrolling game in our Intro to Game Dev course in 2nd year with Unity. I was responsible for the side scrolling, the UI and menu scripting as well as the pollination ability.",
            "Image": [{"img": "gatsbee.gif", "alt": "Fly around as Gatsbee to each of your flowers and pollinate them."},{"img": "gatsbee1.png", "alt": "A simple game where players must juggle the timers of each flower to prevent them from dying."},{"img": "gatsbee3.png", "alt": "Each level adds new flowers of increasing pollen difficulties!"}],
            "Year": "2022",
            "Res": "https://ginettegonzales.itch.io/flower-flux"},
        {"Title": "Crow Game & Controller",
            "Desc": "Myself and a peer were tasked with creating a game and a custom controller using Arduino and it's StandardFirmata library along with the C++ openFrameworks Library for our 3rd year Sensors course. We created a controller shaped as a crow to control a crow on screen with the goal of bringing items back to its nest. The Arduino UNO controller has an IR sensor underneath to detect height, a pressure sensor in each wing to allow players to hold and carry items, a button on each wing to flip the crow's direction on screen, and an RGB LED as each eye to indicate various states within the game.",
            "Image": [{"img": "menu.png", "alt": "Players are tasked with picking up items of various 'weights' and returning them to their nest to gather points."},{"img": "birdUp.mp4", "alt": "The crow on screen detects the height of the controller."},{"img": "birdController.jpg", "alt": "The controller is powered by an Arduino UNO, and the casing is created with cardboard, plastic squeeze bottles, foam and black tape."}],
            "Year": "2022",
            "Res": ""},
        {"Title": "The Little Robot",
            "Desc": "The Little Robot is a linear 3D platforming and melee combat game where you play as a small robot trapped in an isolated testing facility, unaware of the world beyond its walls. This game created with 5 peers as our final year 8-month Capstone project in Unity. As the team lead, I took on the infrastructure of the game including scene management and checkpoints. I was also responsible for the majority of the environmental scripting such as the conveyor belts, moving platforms, and vent systems. I was also responsible for creating the cutscenes sequences and implementing the (many) cameras using the Cinemachine plugin.",
            "Image": [{"img": "robotPlat.gif", "alt": "The robot must traverse through platforming sections as he descends deeper into the facility."},{"img": "narrRoom.png", "alt": "Explore a mysterious facility where dangerous fungus runs rampant."},{"img": "robotComb.gif", "alt": "The robot must defeat a dangerous reoccuring enemy with its fast-paced attacks."}],
            "Year": "2025",
            "Res": "https://wakandacat.wixsite.com/the-little-robot"},
        {"Title": "Crab Cove",
            "Desc": "Crab Cove is a relaxing game about a crab collecting items to decorate his sandcastle! Created by myself and 3 peers to fulfill the challenge of making a unique player controller for our 4th year Advanced Game Dev course in Unity, I was responsible for developing the crab's sideways movement and item spawning with C#, as well as the camerawork with the Cinemachine plugin.",
            "Image": [{"img": "crabHome.jpg", "alt": "Help the crab collect treasures for his home!"},{"img": "crab.gif", "alt": "The crab can dig holes in the sand to find various items."},{"img": "crabGrab.jpg", "alt": "The crab can pick up items with either claw to bring them back to his sandcastle home and decorate it."}],
            "Year": "2024",
            "Res": "https://trisren.itch.io/crab-cove"},
        {"Title": "Garden Planner",
            "Desc": "The Garden Planner was created as the term project for my 4th year Web Frameworks course. The goal was to create a useful application with a django backend and a React frontend. Because of my interest in gardening, I decided to create a garden planner that allows users to plan out their gardens by specifying the dimensions and amount of sun and using the external OpenFarm API to suggest possible plants to grow. Users can then save these plants to their gardens and be notified when they should be watered and harvested. User accounts are also saved to the database so that users can login and logout at any time.",
            "Image": [{"img": "garden2.png", "alt": "Users can create and update garden specifications from the main page."},{"img": "garden3.png", "alt": "Viewing a garden allows users to see the existing plants and see possible new ones that fit the garden criteria from the OpenFarm API."},{"img": "garden4.png", "alt": "Users can view all of the notifications from their gardens."},{"img": "garden1.png", "alt": "Users can create accounts to login and logout of the application."}],
            "Year": "2024",
            "Res": "https://github.com/Carleton-BIT/project-wakandacat"}
    ]  
}